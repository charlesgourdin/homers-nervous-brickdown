{"ast":null,"code":"var _jsxFileName = \"/home/administrateur/Projet/lyon-0919-react-p2-brick-breaker/src/pages/Game.js\";\nimport React, { Component } from 'react';\nimport './Game.css';\nimport Point from '../components/Point';\nimport Bricks from '../components/Bricks';\nimport Pad from '../components/Pad';\nimport Bonus from '../components/Bonus';\nimport MoveBart from '../components/MoveBart'; // import Malus from '../components/Malus'\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.movePad = () => {\n      document.addEventListener('touchstart', event => {\n        this.setState({\n          xLeft: Math.ceil(event.touches[0].pageX)\n        });\n\n        if (!this.isBallMoving && this.counterBall === 1) {\n          this.isBallMoving = true;\n        } else if (!this.isBallMoving) {\n          this.counterBall++;\n        }\n      }, false);\n      document.addEventListener('touchmove', event => {\n        if (this.state.xLeft > 0 && this.state.xLeft < 315) this.setState({\n          xLeft: Math.ceil(event.touches[0].pageX)\n        });\n      }, false);\n    };\n\n    this.deleteBricks = () => {\n      this.setState({\n        brickWall: this.state.brickWall.filter(item => {\n          return !(this.state.pointTop + 20 > item.top && this.state.pointTop < item.top + 10 && this.state.pointLeft + 20 > item.left && this.state.pointLeft < item.left + 67);\n        }).map(item => {\n          return item;\n        })\n      });\n    };\n\n    this.getBonus = () => {\n      if (Math.ceil(Math.random() * 6) === 6 && !this.state.getBonus && this.checkIfCollideX()) {\n        const newDonutsTab = this.state.brickWall.filter(item => {\n          return this.state.pointTop + 20 > item.top && this.state.pointTop < item.top + 10 && this.state.pointLeft + 20 > item.left && this.state.pointLeft < item.left + 67;\n        }).map(item => {\n          return item;\n        });\n        newDonutsTab.push(...this.state.bonus);\n        this.setState({\n          bonus: newDonutsTab,\n          getBonus: true\n        });\n      }\n\n      this.state.getBonus && this.setState({\n        getBonus: false\n      });\n    };\n\n    this.generateIfCollideX = (left, top) => {\n      return this.state.pointTop + 17 > top && this.state.pointTop < top + 7 && this.state.pointLeft + 20 > left && this.state.pointLeft < left + 67;\n    };\n\n    this.generateIfCollideY = (left, top) => {\n      return this.state.pointTop + 20 > top && this.state.pointTop < top + 10 && this.state.pointLeft + 17 > left && this.state.pointLeft < left + 64;\n    };\n\n    this.checkIfCollideX = () => {\n      return this.state.brickWall.find(item => {\n        return this.generateIfCollideX(item.left, item.top) === true;\n      });\n    };\n\n    this.checkIfCollideY = () => {\n      return this.state.brickWall.find(item => {\n        return this.generateIfCollideY(item.left, item.top) === true;\n      });\n    };\n\n    this.checkIfCollidePadY = () => {\n      return this.state.pointTop > 518 && this.state.pointTop <= 521 && this.state.pointLeft - 10 > this.state.xLeft - 30 && this.state.pointLeft - 10 < this.state.xLeft + 30;\n    };\n\n    this.moovingBall = () => {\n      const speed = 100 * this.interval / 1000;\n\n      if (this.isBallMoving) {\n        if (this.goRight) {\n          // eslint-disable-next-line \n          this.setState({\n            pointLeft: this.state.pointLeft += speed\n          });\n        } else if (!this.goRight) {\n          // eslint-disable-next-line \n          this.setState({\n            pointLeft: this.state.pointLeft -= speed\n          });\n        }\n\n        if (this.state.pointLeft > 355 || this.state.pointLeft < 0 || this.checkIfCollideX()) {\n          this.getBonus();\n          this.deleteBricks();\n          this.goRight = !this.goRight;\n        }\n\n        if (this.goDown) {\n          // eslint-disable-next-line \n          this.setState({\n            pointTop: this.state.pointTop += speed\n          });\n        } else if (!this.goDown) {\n          // eslint-disable-next-line \n          this.setState({\n            pointTop: this.state.pointTop -= speed\n          });\n        }\n\n        if (this.state.pointTop < 0 || this.checkIfCollideY() || this.checkIfCollidePadY()) {\n          this.getBonus();\n          this.deleteBricks();\n          this.goDown = !this.goDown;\n        }\n\n        if (this.state.pointTop > 587) {\n          this.isBallMoving = false;\n          this.goDown = false;\n          this.counterBall = 0;\n          this.goRight = true;\n        }\n      } else this.setState({\n        pointTop: 521,\n        pointLeft: this.state.xLeft + 20\n      });\n\n      setTimeout(this.moovingBall, this.interval);\n    };\n\n    this.getBrickWall = () => {\n      const brick = [];\n\n      for (let i = 0; i < 6; i++) {\n        for (let j = 0; j < 5; j++) {\n          brick.push({\n            top: i * 25,\n            left: j * 77\n          });\n        }\n      }\n\n      return brick;\n    };\n\n    this.MouvBartX = () => {\n      if (this.toRight) {\n        this.setState({\n          bartDepart: this.state.bartDepart + 5\n        });\n      } else {\n        this.setState({\n          bartDepart: this.state.bartDepart - 5\n        });\n      }\n\n      if (this.state.bartDepart > 375 - 30) this.toRight = false;else if (this.state.bartDepart < 0) {\n        this.toRight = true;\n      }\n      setTimeout(this.MouvBartX, 100);\n    };\n\n    this.interval = 100;\n    this.goRight = true;\n    this.goDown = false;\n    this.isBallMoving = false;\n    this.counterBall = 0;\n    this.state = {\n      bartDepart: 0,\n      // malusTop : -35,\n      // malusLeft : this.bartDepart,\n      pointLeft: 20,\n      pointTop: 400,\n      brickWall: this.getBrickWall(),\n      xLeft: 0,\n      bonus: [],\n      getBonus: false\n    };\n  }\n\n  // falling = () => {\n  // this.setState({\n  //   malusTop : this.state.malusTop + 10,\n  //   malusLeft : this.state.malusLeft,\n  // })\n  // setTimeout(this.falling, 1000)\n  // }\n  componentDidMount() {\n    this.moovingBall();\n    this.movePad();\n    this.MouvBartX(); // this.falling()\n  }\n\n  render() {\n    const _this$state = this.state,\n          pointLeft = _this$state.pointLeft,\n          pointTop = _this$state.pointTop,\n          xLeft = _this$state.xLeft,\n          bartDepart = _this$state.bartDepart;\n    return React.createElement(\"div\", {\n      className: \"Game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        height: '600px',\n        width: '375',\n        top: '67px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(MoveBart, {\n      left: bartDepart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), this.state.brickWall.map(item => {\n      return React.createElement(Bricks, {\n        top: item.top,\n        left: item.left,\n        key: item.top + '-' + item.left,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      });\n    }), this.state.bonus.map(item => {\n      return React.createElement(Bonus, {\n        top: item.top,\n        left: item.left + 10,\n        key: item.top + '-' + item.left,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      });\n    }), React.createElement(Point, {\n      left: pointLeft,\n      top: pointTop,\n      move: this.isBallMoving,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(Pad, {\n      left: xLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/administrateur/Projet/lyon-0919-react-p2-brick-breaker/src/pages/Game.js"],"names":["React","Component","Point","Bricks","Pad","Bonus","MoveBart","Game","constructor","props","movePad","document","addEventListener","event","setState","xLeft","Math","ceil","touches","pageX","isBallMoving","counterBall","state","deleteBricks","brickWall","filter","item","pointTop","top","pointLeft","left","map","getBonus","random","checkIfCollideX","newDonutsTab","push","bonus","generateIfCollideX","generateIfCollideY","find","checkIfCollideY","checkIfCollidePadY","moovingBall","speed","interval","goRight","goDown","setTimeout","getBrickWall","brick","i","j","MouvBartX","toRight","bartDepart","componentDidMount","render","position","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Game.css';\nimport Point from '../components/Point';\nimport Bricks from '../components/Bricks';\nimport Pad from '../components/Pad';\nimport Bonus from '../components/Bonus';\nimport MoveBart from '../components/MoveBart'\n// import Malus from '../components/Malus'\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props)\n    this.interval = 100;\n    this.goRight = true;\n    this.goDown = false;\n    this.isBallMoving = false;\n    this.counterBall = 0;\n    this.state = {\n      bartDepart: 0,\n      // malusTop : -35,\n      // malusLeft : this.bartDepart,\n      pointLeft: 20,\n      pointTop: 400,\n      brickWall: this.getBrickWall(),\n      xLeft: 0,\n      bonus: [],\n      getBonus: false,\n    }\n  }\n\n  movePad = () => {\n    document.addEventListener('touchstart', event => {\n      this.setState({\n        xLeft: Math.ceil(event.touches[0].pageX)\n      })\n      if (!this.isBallMoving && this.counterBall === 1) {\n        this.isBallMoving = true\n      } else if (!this.isBallMoving) {\n        this.counterBall++\n      }\n    }, false);\n    document.addEventListener('touchmove', event => {\n      if ((this.state.xLeft > 0) && (this.state.xLeft < 315))\n        this.setState({\n          xLeft: Math.ceil(event.touches[0].pageX)\n        })\n    }, false);\n\n  }\n\n  deleteBricks = () => {\n    this.setState({\n      brickWall: this.state.brickWall\n        .filter(item => {\n          return !(this.state.pointTop + 20 > item.top && this.state.pointTop < item.top + 10 && this.state.pointLeft + 20 > item.left && this.state.pointLeft < item.left + 67)\n        })\n        .map(item => {\n          return item\n        })\n    })\n  }\n\n  getBonus = () => {\n    if (Math.ceil(Math.random() * 6) === 6 && !this.state.getBonus && (this.checkIfCollideX())) {\n      const newDonutsTab = this.state.brickWall\n        .filter(item => {\n          return (this.state.pointTop + 20 > item.top && this.state.pointTop < item.top + 10 && this.state.pointLeft + 20 > item.left && this.state.pointLeft < item.left + 67)\n        })\n        .map(item => {\n          return item\n        })\n      newDonutsTab.push(...this.state.bonus)\n      this.setState({ bonus: newDonutsTab, getBonus: true })\n    }\n    this.state.getBonus && this.setState({getBonus: false})\n  }\n\n  generateIfCollideX = (left, top) => {\n\n    return (this.state.pointTop + 17 > top && this.state.pointTop < top + 7 && this.state.pointLeft + 20 > left && this.state.pointLeft < left + 67)\n  }\n\n  generateIfCollideY = (left, top) => {\n    return (this.state.pointTop + 20 > top && this.state.pointTop < top + 10 && this.state.pointLeft + 17 > left && this.state.pointLeft < left + 64)\n  }\n\n  checkIfCollideX = () => {\n    return (this.state.brickWall\n      .find(item => {\n        return this.generateIfCollideX(item.left, item.top) === true\n      }))\n  }\n\n  checkIfCollideY = () => {\n    return (this.state.brickWall\n      .find(item => {\n        return this.generateIfCollideY(item.left, item.top) === true\n      }))\n  }\n\n  checkIfCollidePadY = () => {\n    return (this.state.pointTop > 518\n      && this.state.pointTop <= 521\n      && this.state.pointLeft - 10 > this.state.xLeft - 30\n      && this.state.pointLeft - 10 < this.state.xLeft + 30)\n  }\n\n  moovingBall = () => {\n    const speed = 100 * this.interval / 1000\n    if (this.isBallMoving) {\n      if (this.goRight) {\n        // eslint-disable-next-line \n        this.setState({ pointLeft: this.state.pointLeft += speed })\n      } else if (!this.goRight) {\n        // eslint-disable-next-line \n        this.setState({ pointLeft: this.state.pointLeft -= speed })\n      }\n      if (this.state.pointLeft > 355 || this.state.pointLeft < 0 || this.checkIfCollideX()\n      ) {\n        this.getBonus()\n        this.deleteBricks()\n        this.goRight = !this.goRight\n      }\n      if (this.goDown) {\n        // eslint-disable-next-line \n        this.setState({ pointTop: this.state.pointTop += speed })\n      } else if (!this.goDown) {\n        // eslint-disable-next-line \n        this.setState({ pointTop: this.state.pointTop -= speed })\n      }\n      if (this.state.pointTop < 0 || this.checkIfCollideY() || this.checkIfCollidePadY()\n      ) {\n        this.getBonus()\n        this.deleteBricks()\n        this.goDown = !this.goDown\n      }\n      if (this.state.pointTop > 587) {\n        this.isBallMoving = false\n        this.goDown = false\n        this.counterBall = 0\n        this.goRight = true\n      }\n    } else this.setState({ pointTop: 521, pointLeft: this.state.xLeft + 20 })\n    setTimeout(this.moovingBall, this.interval)\n  }\n\n  getBrickWall = () => {\n    const brick = [];\n    for (let i = 0; i < 6; i++) {\n      for (let j = 0; j < 5; j++) {\n        brick.push({ top: i * 25, left: j * 77 })\n      }\n    }\n    return brick;\n  };\n\n  MouvBartX = () => {\n    if (this.toRight) {\n      this.setState({ bartDepart: this.state.bartDepart + 5 })\n    } else {\n      this.setState({ bartDepart: this.state.bartDepart - 5 })\n    }\n    if (this.state.bartDepart > 375 - 30)\n      this.toRight = false;\n\n    else if (this.state.bartDepart < 0) {\n      this.toRight = true\n    }\n    setTimeout(this.MouvBartX, 100)\n  }\n\n  // falling = () => {\n  // this.setState({\n  //   malusTop : this.state.malusTop + 10,\n  //   malusLeft : this.state.malusLeft,\n  // })\n  // setTimeout(this.falling, 1000)\n  // }\n\n\n  componentDidMount() {\n    this.moovingBall()\n    this.movePad()\n    this.MouvBartX()\n    // this.falling()\n  }\n\n\n  render() {\n    const { pointLeft, pointTop, xLeft, bartDepart } = this.state\n    return (\n      <div className=\"Game\">\n        <div style={{ position: 'relative', height: '600px', width: '375', top: '67px' }}>\n          <MoveBart left={bartDepart} />\n          {/* <Malus \n          left = {malusLeft} \n          top = {malusTop}/> */}\n          {this.state.brickWall.map(item => {\n            return (\n              <Bricks\n                top={item.top}\n                left={item.left}\n                key={item.top + '-' + item.left}\n              />\n            );\n          })}\n          {this.state.bonus.map(item => {\n            return (\n              <Bonus\n                top={item.top}\n                left={item.left + 10}\n                key={item.top + '-' + item.left} />\n            )\n          }\n          )}\n          <Point left={pointLeft} top={pointTop} move={this.isBallMoving} />\n          <Pad left={xLeft} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}